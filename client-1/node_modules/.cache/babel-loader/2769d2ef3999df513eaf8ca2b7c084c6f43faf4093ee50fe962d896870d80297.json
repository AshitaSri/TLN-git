{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Task1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SmallestNumberGame = () => {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionsCompleted, setQuestionsCompleted] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const navigate = useNavigate();\n  const resultTimeout = useRef(null);\n  const sendCompletedQuestions = async completed => {\n    try {\n      const token = window.localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/saveCompletedQuestions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          task: 'Task1',\n          completed: completed\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(data);\n\n      // Navigate or handle the response as needed\n    } catch (error) {\n      console.error('Error saving completed questions:', error);\n    }\n  };\n  useEffect(() => {\n    if (questionsCompleted > 0) {\n      sendCompletedQuestions(questionsCompleted);\n    }\n  }, [questionsCompleted]);\n  const calculateScore = () => {\n    if (endTime) {\n      const accuracy = correctAnswers / 5 * 100;\n      setResult(`Game Over! Your score: ${correctAnswers}/5\\nAccuracy: ${accuracy.toFixed(0)}%`);\n      setShowResult(true); // Ensure that the result is displayed\n    }\n  };\n  const startNewSet = useCallback(() => {\n    if (questionIndex === 5) {\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      const newNumbers = Array.from({\n        length: 5\n      }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setShowResult(false);\n      setStartTime(new Date());\n    }\n  }, [questionIndex]);\n  useEffect(() => {\n    startNewSet(); // Initial set of numbers when the component mounts\n\n    // Cleanup function to calculate the score when the component unmounts or the game is over\n    return () => {\n      if (questionIndex === 5) {\n        calculateScore();\n      }\n    };\n  }, [startNewSet, questionIndex]);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = (seconds % 60).toFixed(2);\n    return `${minutes} min ${remainingSeconds} seconds`;\n  };\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every((number, index) => index === selectedIndex || selectedNumber <= number);\n    if (isSmallest) {\n      setResult('YES! You are right!');\n      setCorrectAnswers(prevCorrectAnswers => prevCorrectAnswers + 1);\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n    setShowResult(true);\n    clearTimeout(resultTimeout.current);\n    resultTimeout.current = setTimeout(() => {\n      setShowResult(false);\n      setQuestionIndex(prevQuestionIndex => prevQuestionIndex + 1);\n      startNewSet(); // Generate a new set of numbers for the next question\n    }, 1000);\n  };\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setCorrectAnswers(0);\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n    setShowResult(false);\n    setQuestionsCompleted(prevCompleted => prevCompleted + 5); // Increment by 5\n    startNewSet();\n  };\n  const goBack = async () => {\n    try {\n      const token = window.localStorage.getItem('token');\n\n      // Send the completed questions to the server\n      await sendCompletedQuestions(questionsCompleted + 5); // Increment by 5\n\n      // Save additional data or perform other actions if needed\n\n      // Navigate to the dashboard\n      navigate('/dashboard', {\n        state: {\n          questionsCompleted: questionsCompleted + 5\n        }\n      }); // Increment by 5\n    } catch (error) {\n      console.error('Error saving completed questions:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [!gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Smallest Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test your skills by identifying the smallest number in each set of numbers. Click on the number you believe is the smallest. Can you get them all right?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), gameStarted && questionIndex <= 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select the smallest number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-buttons\",\n        children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => checkSmallestNumber(number, index),\n          children: number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: showResult && result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), questionIndex === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), endTime && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total time: \", formatTime((endTime - startTime) / 1000)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", correctAnswers, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Accuracy: \", correctAnswers / 5 * 100, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), !gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: restartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(SmallestNumberGame, \"SSQ8lqWehw3d3q8utzCc3O1sIe4=\", false, function () {\n  return [useNavigate];\n});\n_c = SmallestNumberGame;\nexport default SmallestNumberGame;\nvar _c;\n$RefreshReg$(_c, \"SmallestNumberGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useNavigate","jsxDEV","_jsxDEV","SmallestNumberGame","_s","numbers","setNumbers","result","setResult","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","questionsCompleted","setQuestionsCompleted","startTime","setStartTime","endTime","setEndTime","gameStarted","setGameStarted","showResult","setShowResult","navigate","resultTimeout","sendCompletedQuestions","completed","token","window","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","task","ok","Error","status","data","json","console","log","error","calculateScore","accuracy","toFixed","startNewSet","Date","newNumbers","Array","from","length","Math","floor","random","formatTime","seconds","minutes","remainingSeconds","checkSmallestNumber","selectedNumber","selectedIndex","isSmallest","every","number","index","prevCorrectAnswers","clearTimeout","current","setTimeout","prevQuestionIndex","restartGame","prevCompleted","goBack","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Task1.css';\n\nconst SmallestNumberGame = () => {\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionsCompleted, setQuestionsCompleted] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const navigate = useNavigate();\n  const resultTimeout = useRef(null);\n\n  const sendCompletedQuestions = async (completed) => {\n    try {\n      const token = window.localStorage.getItem('token');\n  \n      const response = await fetch('http://localhost:5000/saveCompletedQuestions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          task: 'Task1',\n          completed: completed,\n        }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const data = await response.json();\n      console.log(data);\n  \n      // Navigate or handle the response as needed\n    } catch (error) {\n      console.error('Error saving completed questions:', error);\n    }\n  };\n  \n  useEffect(() => {\n    if (questionsCompleted > 0) {\n      sendCompletedQuestions(questionsCompleted);\n    }\n  }, [questionsCompleted]);\n\n  const calculateScore = () => {\n    if (endTime) {\n      const accuracy = (correctAnswers / 5) * 100;\n      setResult(`Game Over! Your score: ${correctAnswers}/5\\nAccuracy: ${accuracy.toFixed(0)}%`);\n      setShowResult(true); // Ensure that the result is displayed\n    }\n  };\n\n  const startNewSet = useCallback(() => {\n    if (questionIndex === 5) {\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      const newNumbers = Array.from({ length: 5 }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setShowResult(false);\n      setStartTime(new Date());\n    }\n  }, [questionIndex]);\n\n  useEffect(() => {\n    startNewSet(); // Initial set of numbers when the component mounts\n\n    // Cleanup function to calculate the score when the component unmounts or the game is over\n    return () => {\n      if (questionIndex === 5) {\n        calculateScore();\n      }\n    };\n  }, [startNewSet, questionIndex]);\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = (seconds % 60).toFixed(2);\n    return `${minutes} min ${remainingSeconds} seconds`;\n  };\n\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every(\n      (number, index) => index === selectedIndex || selectedNumber <= number\n    );\n\n    if (isSmallest) {\n      setResult('YES! You are right!');\n      setCorrectAnswers((prevCorrectAnswers) => prevCorrectAnswers + 1);\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n\n    setShowResult(true);\n\n    clearTimeout(resultTimeout.current);\n\n    resultTimeout.current = setTimeout(() => {\n      setShowResult(false);\n      setQuestionIndex((prevQuestionIndex) => prevQuestionIndex + 1);\n      startNewSet(); // Generate a new set of numbers for the next question\n    }, 1000);\n  };\n\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setCorrectAnswers(0);\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n    setShowResult(false);\n    setQuestionsCompleted((prevCompleted) => prevCompleted + 5); // Increment by 5\n    startNewSet();\n  };\n\n  const goBack = async () => {\n    try {\n      const token = window.localStorage.getItem('token');\n\n      // Send the completed questions to the server\n      await sendCompletedQuestions(questionsCompleted + 5); // Increment by 5\n\n      // Save additional data or perform other actions if needed\n\n      // Navigate to the dashboard\n      navigate('/dashboard', { state: { questionsCompleted: questionsCompleted + 5 } }); // Increment by 5\n    } catch (error) {\n      console.error('Error saving completed questions:', error);\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      {!gameStarted && (\n        <div className=\"game-description\">\n          <h1>Select the Smallest Number</h1>\n          <p>\n            Test your skills by identifying the smallest number in each set of numbers. Click on\n            the number you believe is the smallest. Can you get them all right?\n          </p>\n        </div>\n      )}\n\n      {gameStarted && questionIndex <= 4 && (\n        <div>\n          <p>Select the smallest number!</p>\n          <div className=\"number-buttons\">\n            {numbers.map((number, index) => (\n              <button key={index} onClick={() => checkSmallestNumber(number, index)}>\n                {number}\n              </button>\n            ))}\n          </div>\n          <p>{showResult && result}</p>\n        </div>\n      )}\n\n      {questionIndex === 5 && (\n        <div>\n          <p>Game Over!</p>\n          {endTime && (\n            <div>\n              <p>Total time: {formatTime((endTime - startTime) / 1000)}</p>\n              <p>Your score: {correctAnswers}/5</p>\n              <p>Accuracy: {(correctAnswers / 5) * 100}%</p>\n            </div>\n          )}\n          <button onClick={restartGame}>Restart Game</button>\n          <button onClick={goBack}>Go Back</button>\n        </div>\n      )}\n\n      {!gameStarted && (\n        <div className=\"start-button-container\">\n          <button className=\"start-button\" onClick={restartGame}>\n            Start Game\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SmallestNumberGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}