{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task2.js\",\n  _s = $RefreshSig$();\n// Task2.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Task2.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchTheColumnGame = () => {\n  _s();\n  const [columnA, setColumnA] = useState(['Apple', 'Banana', 'Cherry', 'Grapes']);\n  const [columnB, setColumnB] = useState(['Red', 'Yellow', 'Red', 'Purple']);\n  const [selectedCellA, setSelectedCellA] = useState(null);\n  const [selectedCellB, setSelectedCellB] = useState(null);\n  const [correctMatches, setCorrectMatches] = useState([]);\n  const [allCorrect, setAllCorrect] = useState(false);\n  const handleCellClick = (index, column) => {\n    if (column === 'A') {\n      setSelectedCellA(index);\n    } else if (column === 'B') {\n      setSelectedCellB(index);\n    }\n  };\n  const checkMatch = () => {\n    if (selectedCellA !== null && selectedCellB !== null) {\n      const pairs = {\n        'Apple': 'Red',\n        'Banana': 'Yellow',\n        'Cherry': 'Red',\n        'Grapes': 'Purple'\n      };\n      const isMatch = pairs[columnA[selectedCellA]] === columnB[selectedCellB];\n      if (isMatch) {\n        setCorrectMatches(prevMatches => [...prevMatches, selectedCellA, selectedCellB]);\n      }\n      return isMatch;\n    }\n    return false;\n  };\n  useEffect(() => {\n    if (correctMatches.length === columnA.length) {\n      setAllCorrect(true);\n    } else {\n      setAllCorrect(false);\n    }\n  }, [correctMatches, columnA.length]);\n  const resetSelection = () => {\n    setSelectedCellA(null);\n    setSelectedCellB(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Match the Columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: columnA.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${selectedCellA === index ? 'selected' : ''}`,\n          onClick: () => handleCellClick(index, 'A'),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: columnB.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${selectedCellB === index ? 'selected' : ''} ${correctMatches.includes(index) ? 'correct-match' : ''}`,\n          onClick: () => handleCellClick(index, 'B'),\n          style: {\n            backgroundColor: allCorrect && correctMatches.includes(index) ? 'red' : ''\n          },\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), allCorrect ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"All Matches Correct!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : checkMatch() ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Correct Match!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this) : selectedCellA !== null && selectedCellB !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Incorrect Match. Try Again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetSelection,\n      children: \"Reset Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchTheColumnGame, \"mv5j+IdWInaNYRTnftMxIT8ofMs=\");\n_c = MatchTheColumnGame;\nexport default MatchTheColumnGame;\nvar _c;\n$RefreshReg$(_c, \"MatchTheColumnGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MatchTheColumnGame","_s","columnA","setColumnA","columnB","setColumnB","selectedCellA","setSelectedCellA","selectedCellB","setSelectedCellB","correctMatches","setCorrectMatches","allCorrect","setAllCorrect","handleCellClick","index","column","checkMatch","pairs","isMatch","prevMatches","length","resetSelection","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","value","onClick","includes","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task2.js"],"sourcesContent":["// Task2.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Task2.css';\n\nconst MatchTheColumnGame = () => {\n  const [columnA, setColumnA] = useState(['Apple', 'Banana', 'Cherry', 'Grapes']);\n  const [columnB, setColumnB] = useState(['Red', 'Yellow', 'Red', 'Purple']);\n  const [selectedCellA, setSelectedCellA] = useState(null);\n  const [selectedCellB, setSelectedCellB] = useState(null);\n  const [correctMatches, setCorrectMatches] = useState([]);\n  const [allCorrect, setAllCorrect] = useState(false);\n\n  const handleCellClick = (index, column) => {\n    if (column === 'A') {\n      setSelectedCellA(index);\n    } else if (column === 'B') {\n      setSelectedCellB(index);\n    }\n  };\n\n  const checkMatch = () => {\n    if (selectedCellA !== null && selectedCellB !== null) {\n      const pairs = {\n        'Apple': 'Red',\n        'Banana': 'Yellow',\n        'Cherry': 'Red',\n        'Grapes': 'Purple'\n      };\n\n      const isMatch = pairs[columnA[selectedCellA]] === columnB[selectedCellB];\n\n      if (isMatch) {\n        setCorrectMatches(prevMatches => [...prevMatches, selectedCellA, selectedCellB]);\n      }\n\n      return isMatch;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (correctMatches.length === columnA.length) {\n      setAllCorrect(true);\n    } else {\n      setAllCorrect(false);\n    }\n  }, [correctMatches, columnA.length]);\n\n  const resetSelection = () => {\n    setSelectedCellA(null);\n    setSelectedCellB(null);\n  };\n\n  return (\n    <div>\n      <h2>Match the Columns</h2>\n      <div className=\"grid\">\n        <div className=\"column\">\n          {columnA.map((value, index) => (\n            <div\n              key={index}\n              className={`cell ${selectedCellA === index ? 'selected' : ''}`}\n              onClick={() => handleCellClick(index, 'A')}\n            >\n              {value}\n            </div>\n          ))}\n        </div>\n        <div className=\"column\">\n          {columnB.map((value, index) => (\n            <div\n              key={index}\n              className={`cell ${selectedCellB === index ? 'selected' : ''} ${correctMatches.includes(index) ? 'correct-match' : ''}`}\n              onClick={() => handleCellClick(index, 'B')}\n              style={{ backgroundColor: allCorrect && correctMatches.includes(index) ? 'red' : '' }}\n            >\n              {value}\n            </div>\n          ))}\n        </div>\n      </div>\n      {allCorrect ? (\n        <p>All Matches Correct!</p>\n      ) : (\n        checkMatch() ? (\n          <p>Correct Match!</p>\n        ) : (\n          selectedCellA !== null && selectedCellB !== null && <p>Incorrect Match. Try Again!</p>\n        )\n      )}\n      <button onClick={resetSelection}>Reset Selection</button>\n    </div>\n  );\n};\n\nexport default MatchTheColumnGame;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAC/E,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;EAC1E,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMkB,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACzC,IAAIA,MAAM,KAAK,GAAG,EAAE;MAClBT,gBAAgB,CAACQ,KAAK,CAAC;IACzB,CAAC,MAAM,IAAIC,MAAM,KAAK,GAAG,EAAE;MACzBP,gBAAgB,CAACM,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIX,aAAa,KAAK,IAAI,IAAIE,aAAa,KAAK,IAAI,EAAE;MACpD,MAAMU,KAAK,GAAG;QACZ,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE;MACZ,CAAC;MAED,MAAMC,OAAO,GAAGD,KAAK,CAAChB,OAAO,CAACI,aAAa,CAAC,CAAC,KAAKF,OAAO,CAACI,aAAa,CAAC;MAExE,IAAIW,OAAO,EAAE;QACXR,iBAAiB,CAACS,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEd,aAAa,EAAEE,aAAa,CAAC,CAAC;MAClF;MAEA,OAAOW,OAAO;IAChB;IACA,OAAO,KAAK;EACd,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,IAAIa,cAAc,CAACW,MAAM,KAAKnB,OAAO,CAACmB,MAAM,EAAE;MAC5CR,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACH,cAAc,EAAER,OAAO,CAACmB,MAAM,CAAC,CAAC;EAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3Bf,gBAAgB,CAAC,IAAI,CAAC;IACtBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEV,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B5B,OAAA;MAAK6B,SAAS,EAAC,MAAM;MAAAL,QAAA,gBACnBxB,OAAA;QAAK6B,SAAS,EAAC,QAAQ;QAAAL,QAAA,EACpBrB,OAAO,CAAC2B,GAAG,CAAC,CAACC,KAAK,EAAEf,KAAK,kBACxBhB,OAAA;UAEE6B,SAAS,EAAG,QAAOtB,aAAa,KAAKS,KAAK,GAAG,UAAU,GAAG,EAAG,EAAE;UAC/DgB,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACC,KAAK,EAAE,GAAG,CAAE;UAAAQ,QAAA,EAE1CO;QAAK,GAJDf,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAK6B,SAAS,EAAC,QAAQ;QAAAL,QAAA,EACpBnB,OAAO,CAACyB,GAAG,CAAC,CAACC,KAAK,EAAEf,KAAK,kBACxBhB,OAAA;UAEE6B,SAAS,EAAG,QAAOpB,aAAa,KAAKO,KAAK,GAAG,UAAU,GAAG,EAAG,IAAGL,cAAc,CAACsB,QAAQ,CAACjB,KAAK,CAAC,GAAG,eAAe,GAAG,EAAG,EAAE;UACxHgB,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACC,KAAK,EAAE,GAAG,CAAE;UAC3CkB,KAAK,EAAE;YAAEC,eAAe,EAAEtB,UAAU,IAAIF,cAAc,CAACsB,QAAQ,CAACjB,KAAK,CAAC,GAAG,KAAK,GAAG;UAAG,CAAE;UAAAQ,QAAA,EAErFO;QAAK,GALDf,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACLf,UAAU,gBACTb,OAAA;MAAAwB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE3BV,UAAU,CAAC,CAAC,gBACVlB,OAAA;MAAAwB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAErBrB,aAAa,KAAK,IAAI,IAAIE,aAAa,KAAK,IAAI,iBAAIT,OAAA;MAAAwB,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAExF,eACD5B,OAAA;MAAQgC,OAAO,EAAET,cAAe;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzFID,kBAAkB;AAAAmC,EAAA,GAAlBnC,kBAAkB;AA2FxB,eAAeA,kBAAkB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}