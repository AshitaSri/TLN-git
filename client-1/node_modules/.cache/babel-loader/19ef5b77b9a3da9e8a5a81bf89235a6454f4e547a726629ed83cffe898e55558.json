{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Task1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SmallestNumberGame = () => {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  useEffect(() => {\n    if (gameStarted) {\n      startNewSet();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameStarted]);\n  const startNewSet = () => {\n    if (questionIndex === 5) {\n      // End the game after 5 sets of questions\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      // Generate new random numbers for the next set of questions\n      const newNumbers = Array.from({\n        length: 5\n      }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setStartTime(new Date());\n    }\n  };\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every((number, index) => index === selectedIndex || selectedNumber <= number);\n    if (isSmallest) {\n      setResult('YES! You are right!');\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n\n    // Move to the next set of questions\n    setQuestionIndex(prevIndex => prevIndex + 1);\n  };\n  const calculateScore = () => {\n    // Calculate total time and score after 5 sets of questions\n    const totalTime = (endTime - startTime) / 1000; // in seconds\n    const score = Math.round(5 / totalTime * 100); // simple scoring, adjust as needed\n    setResult(`Game Over! Total time: ${totalTime.toFixed(2)} seconds. Your score: ${score}`);\n  };\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n  };\n  const goBack = () => {\n    // Go back to the previous set of questions\n    setQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Smallest Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around',\n          marginTop: '20px'\n        },\n        children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => checkSmallestNumber(number, index),\n          children: number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goBack,\n          disabled: questionIndex === 0,\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), questionIndex === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total time: \", (endTime - startTime) / 1000, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", Math.round(5 / ((endTime - startTime) / 1000) * 100)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), !gameStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartGame,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(SmallestNumberGame, \"mjABlfxTVodrEiCTZMn6KSZrg7g=\");\n_c = SmallestNumberGame;\nexport default SmallestNumberGame;\nvar _c;\n$RefreshReg$(_c, \"SmallestNumberGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SmallestNumberGame","_s","numbers","setNumbers","result","setResult","questionIndex","setQuestionIndex","startTime","setStartTime","endTime","setEndTime","gameStarted","setGameStarted","startNewSet","Date","calculateScore","newNumbers","Array","from","length","Math","floor","random","checkSmallestNumber","selectedNumber","selectedIndex","isSmallest","every","number","index","prevIndex","totalTime","score","round","toFixed","restartGame","goBack","max","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","marginTop","map","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Task1.css';\n\nconst SmallestNumberGame = () => {\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  useEffect(() => {\n    if (gameStarted) {\n      startNewSet();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameStarted]);\n\n  const startNewSet = () => {\n    if (questionIndex === 5) {\n      // End the game after 5 sets of questions\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      // Generate new random numbers for the next set of questions\n      const newNumbers = Array.from({ length: 5 }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setStartTime(new Date());\n    }\n  };\n\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every(\n      (number, index) => index === selectedIndex || selectedNumber <= number\n    );\n\n    if (isSmallest) {\n      setResult('YES! You are right!');\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n\n    // Move to the next set of questions\n    setQuestionIndex(prevIndex => prevIndex + 1);\n  };\n\n  const calculateScore = () => {\n    // Calculate total time and score after 5 sets of questions\n    const totalTime = (endTime - startTime) / 1000; // in seconds\n    const score = Math.round((5 / totalTime) * 100); // simple scoring, adjust as needed\n    setResult(`Game Over! Total time: ${totalTime.toFixed(2)} seconds. Your score: ${score}`);\n  };\n\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n  };\n\n  const goBack = () => {\n    // Go back to the previous set of questions\n    setQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n\n  return (\n    <div>\n      {gameStarted && (\n        <div>\n          <h1>Select the Smallest Number</h1>\n          <div style={{ display: 'flex', justifyContent: 'space-around', marginTop: '20px' }}>\n            {numbers.map((number, index) => (\n              <button key={index} onClick={() => checkSmallestNumber(number, index)}>\n                {number}\n              </button>\n            ))}\n          </div>\n          <p>{result}</p>\n          <div>\n            <button onClick={restartGame}>Restart Game</button>\n            <button onClick={goBack} disabled={questionIndex === 0}>Go Back</button>\n          </div>\n          {questionIndex === 5 && (\n            <div>\n              <p>Game Over!</p>\n              <p>Total time: {(endTime - startTime) / 1000} seconds</p>\n              <p>Your score: {Math.round((5 / ((endTime - startTime) / 1000)) * 100)}</p>\n            </div>\n          )}\n        </div>\n      )}\n      {!gameStarted && (\n        <button onClick={restartGame}>Start</button>\n      )}\n    </div>\n  );\n};\n\nexport default SmallestNumberGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}