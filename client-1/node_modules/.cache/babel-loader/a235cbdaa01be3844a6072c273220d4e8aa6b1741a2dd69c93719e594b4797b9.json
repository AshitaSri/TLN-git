{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task3.js\",\n  _s = $RefreshSig$();\n// Task3.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Task3.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FillInBlanksGame = () => {\n  _s();\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(1);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  useEffect(() => {\n    generateRandomNumbers();\n  }, [questionIndex]);\n  const generateRandomNumbers = () => {\n    setNumber1(Math.floor(Math.random() * 10) + 1);\n    setNumber2(Math.floor(Math.random() * 10) + 1);\n    setUserAnswer('');\n    setResultMessage('');\n  };\n  const handleInputChange = event => {\n    // Allow only numbers in the input field\n    const enteredValue = event.target.value.replace(/[^0-9]/g, '');\n    setUserAnswer(enteredValue);\n  };\n  const handleCheckAnswer = () => {\n    const answer = parseInt(userAnswer, 10);\n    const correctAnswer = number1 + number2;\n    if (!isNaN(answer)) {\n      if (answer === correctAnswer) {\n        setResultMessage(`Correct! ${number1} + ${number2} = ${correctAnswer}`);\n        setCorrectAnswers(prevCorrectAnswers => prevCorrectAnswers + 1);\n      } else {\n        setResultMessage('Oops! Try again.');\n      }\n    } else {\n      setResultMessage('Please enter a valid number.');\n    }\n  };\n  const handleNextQuestion = () => {\n    setQuestionIndex(prevIndex => prevIndex + 1);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      if (resultMessage === '') {\n        // If result message is empty, check the answer\n        handleCheckAnswer();\n      } else {\n        // If result message is not empty, move to the next question\n        handleNextQuestion();\n      }\n    }\n  };\n  const handleEndGame = () => {\n    setResultMessage(`Game Over! Your Final Score: ${correctAnswers}/${questionIndex - 1}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fill-in-blanks-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [questionIndex <= 5 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", questionIndex, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [number1, \" + \", number2, \" = ?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAnswer,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress,\n          placeholder: \"Your answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCheckAnswer,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-message\",\n          children: resultMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-message\",\n          children: resultMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), resultMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score: \", correctAnswers, \"/\", questionIndex - 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), questionIndex <= 5 && resultMessage && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-question\",\n        onClick: handleNextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), questionIndex > 5 && resultMessage && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-game\",\n        onClick: handleEndGame,\n        children: \"End Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(FillInBlanksGame, \"RS59AcPg0L9NbWicToR5VxSFBds=\");\n_c = FillInBlanksGame;\nexport default FillInBlanksGame;\nvar _c;\n$RefreshReg$(_c, \"FillInBlanksGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FillInBlanksGame","_s","number1","setNumber1","number2","setNumber2","userAnswer","setUserAnswer","resultMessage","setResultMessage","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","generateRandomNumbers","Math","floor","random","handleInputChange","event","enteredValue","target","value","replace","handleCheckAnswer","answer","parseInt","correctAnswer","isNaN","prevCorrectAnswers","handleNextQuestion","prevIndex","handleKeyPress","key","handleEndGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task3.js"],"sourcesContent":["// Task3.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Task3.css';\n\nconst FillInBlanksGame = () => {\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(1);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  useEffect(() => {\n    generateRandomNumbers();\n  }, [questionIndex]);\n\n  const generateRandomNumbers = () => {\n    setNumber1(Math.floor(Math.random() * 10) + 1);\n    setNumber2(Math.floor(Math.random() * 10) + 1);\n    setUserAnswer('');\n    setResultMessage('');\n  };\n\n  const handleInputChange = (event) => {\n    // Allow only numbers in the input field\n    const enteredValue = event.target.value.replace(/[^0-9]/g, '');\n    setUserAnswer(enteredValue);\n  };\n\n  const handleCheckAnswer = () => {\n    const answer = parseInt(userAnswer, 10);\n    const correctAnswer = number1 + number2;\n\n    if (!isNaN(answer)) {\n      if (answer === correctAnswer) {\n        setResultMessage(`Correct! ${number1} + ${number2} = ${correctAnswer}`);\n        setCorrectAnswers((prevCorrectAnswers) => prevCorrectAnswers + 1);\n      } else {\n        setResultMessage('Oops! Try again.');\n      }\n    } else {\n      setResultMessage('Please enter a valid number.');\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setQuestionIndex((prevIndex) => prevIndex + 1);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      if (resultMessage === '') {\n        // If result message is empty, check the answer\n        handleCheckAnswer();\n      } else {\n        // If result message is not empty, move to the next question\n        handleNextQuestion();\n      }\n    }\n  };\n\n  const handleEndGame = () => {\n    setResultMessage(`Game Over! Your Final Score: ${correctAnswers}/${questionIndex - 1}`);\n  };\n\n  return (\n    <div className=\"fill-in-blanks-container\">\n      <div className=\"question-container\">\n        {questionIndex <= 5 ? (\n          <>\n            <p>Question {questionIndex}:</p>\n            <p>{number1} + {number2} = ?</p>\n            <input\n              type=\"text\"\n              value={userAnswer}\n              onChange={handleInputChange}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Your answer\"\n            />\n            <button onClick={handleCheckAnswer}>Check Answer</button>\n            <div className=\"result-message\">{resultMessage}</div>\n          </>\n        ) : (\n          <>\n            <div className=\"result-message\">{resultMessage}</div>\n            {resultMessage && (\n              <div className=\"score\">Score: {correctAnswers}/{questionIndex - 1}</div>\n            )}\n          </>\n        )}\n        {questionIndex <= 5 && resultMessage && (\n          <button className=\"next-question\" onClick={handleNextQuestion}>\n            Next Question\n          </button>\n        )}\n        {questionIndex > 5 && resultMessage && (\n          <button className=\"end-game\" onClick={handleEndGame}>\n            End Game\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FillInBlanksGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}