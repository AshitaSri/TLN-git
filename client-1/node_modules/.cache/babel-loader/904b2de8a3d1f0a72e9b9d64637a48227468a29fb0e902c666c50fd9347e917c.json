{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Task1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SmallestNumberGame = () => {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false); // Add state to manage result visibility\n\n  useEffect(() => {\n    if (gameStarted) {\n      startNewSet();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameStarted]);\n  const startNewSet = () => {\n    if (questionIndex === 5) {\n      // End the game after 5 sets of questions\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      // Generate new random numbers for the next set of questions\n      const newNumbers = Array.from({\n        length: 5\n      }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setShowResult(false); // Reset result visibility\n      setStartTime(new Date());\n    }\n  };\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every((number, index) => index === selectedIndex || selectedNumber <= number);\n    if (isSmallest) {\n      setResult('YES! You are right!');\n      setCorrectAnswers(prevCorrectAnswers => prevCorrectAnswers + 1);\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n\n    // Show result for a short duration before moving to the next set of questions\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      setQuestionIndex(prevIndex => prevIndex + 1);\n    }, 1000); // 1000 milliseconds delay (adjust as needed)\n  };\n  const calculateScore = () => {\n    // Calculate accuracy after 5 sets of questions\n    if (endTime) {\n      const accuracy = correctAnswers / 5 * 100; // calculate accuracy out of 5\n      setResult(`Game Over! Your score: ${correctAnswers}/5\\nAccuracy: ${accuracy.toFixed(0)}%`);\n    }\n  };\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setCorrectAnswers(0);\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n  };\n  const goBack = () => {\n    // Go back to the previous set of questions\n    setQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Smallest Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around',\n          marginTop: '20px'\n        },\n        children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => checkSmallestNumber(number, index),\n          children: number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: showResult && result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), questionIndex === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), endTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total time: \", (endTime - startTime) / 1000, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your score: \", correctAnswers, \"/5 - \", correctAnswers / 5 * 100, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goBack,\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), !gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SmallestNumberGame, \"fFixrHtH9TwF9UJAPWU/aLxDqc0=\");\n_c = SmallestNumberGame;\nexport default SmallestNumberGame;\nvar _c;\n$RefreshReg$(_c, \"SmallestNumberGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SmallestNumberGame","_s","numbers","setNumbers","result","setResult","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","startTime","setStartTime","endTime","setEndTime","gameStarted","setGameStarted","showResult","setShowResult","startNewSet","Date","calculateScore","newNumbers","Array","from","length","Math","floor","random","checkSmallestNumber","selectedNumber","selectedIndex","isSmallest","every","number","index","prevCorrectAnswers","setTimeout","prevIndex","accuracy","toFixed","restartGame","goBack","max","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","marginTop","map","onClick","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Task1.css';\n\nconst SmallestNumberGame = () => {\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false); // Add state to manage result visibility\n\n  useEffect(() => {\n    if (gameStarted) {\n      startNewSet();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameStarted]);\n\n  const startNewSet = () => {\n    if (questionIndex === 5) {\n      // End the game after 5 sets of questions\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      // Generate new random numbers for the next set of questions\n      const newNumbers = Array.from({ length: 5 }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setShowResult(false); // Reset result visibility\n      setStartTime(new Date());\n    }\n  };\n\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every(\n      (number, index) => index === selectedIndex || selectedNumber <= number\n    );\n\n    if (isSmallest) {\n      setResult('YES! You are right!');\n      setCorrectAnswers(prevCorrectAnswers => prevCorrectAnswers + 1);\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n\n    // Show result for a short duration before moving to the next set of questions\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      setQuestionIndex(prevIndex => prevIndex + 1);\n    }, 1000); // 1000 milliseconds delay (adjust as needed)\n  };\n\n  const calculateScore = () => {\n    // Calculate accuracy after 5 sets of questions\n    if (endTime) {\n      const accuracy = (correctAnswers / 5) * 100; // calculate accuracy out of 5\n      setResult(`Game Over! Your score: ${correctAnswers}/5\\nAccuracy: ${accuracy.toFixed(0)}%`);\n    }\n  };\n  \n  \n\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setCorrectAnswers(0);\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n  };\n\n  const goBack = () => {\n    // Go back to the previous set of questions\n    setQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n\n  return (\n    <div>\n      {gameStarted && (\n        <div>\n          <h1>Select the Smallest Number</h1>\n          <div style={{ display: 'flex', justifyContent: 'space-around', marginTop: '20px' }}>\n            {numbers.map((number, index) => (\n              <button key={index} onClick={() => checkSmallestNumber(number, index)}>\n                {number}\n              </button>\n            ))}\n          </div>\n          <p>{showResult && result}</p>\n          {questionIndex === 5 && (\n            <div>\n              <p>Game Over!</p>\n              {endTime && (\n                <div>\n                  <p>Total time: {(endTime - startTime) / 1000} seconds</p>\n                  <p>Your score: {correctAnswers}/5 - {(correctAnswers / 5) * 100}%</p>\n                </div>\n              )}\n              <button onClick={restartGame}>Restart Game</button>\n              <button onClick={goBack}>Go Back</button>\n            </div>\n          )}\n        </div>\n      )}\n      {!gameStarted && (\n        <div>\n          <button onClick={restartGame}>Start</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SmallestNumberGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}