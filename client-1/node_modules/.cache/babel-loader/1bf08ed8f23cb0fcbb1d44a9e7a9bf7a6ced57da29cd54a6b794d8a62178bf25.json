{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task3.js\",\n  _s = $RefreshSig$();\n// Task3.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Task3.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FillInBlanksGame = () => {\n  _s();\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(1);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    if (questionIndex <= 5 && !gameOver) {\n      generateRandomNumbers();\n    } else {\n      handleEndGame();\n    }\n  }, [questionIndex, gameOver]);\n  const generateRandomNumbers = () => {\n    setNumber1(Math.floor(Math.random() * 10) + 1);\n    setNumber2(Math.floor(Math.random() * 10) + 1);\n    setUserAnswer('');\n    setResultMessage('');\n  };\n  const handleInputChange = event => {\n    // Allow only numbers in the input field\n    const enteredValue = event.target.value.replace(/[^0-9]/g, '');\n    setUserAnswer(enteredValue);\n  };\n  const handleCheckAnswer = () => {\n    const answer = parseInt(userAnswer, 10);\n    const correctAnswer = number1 + number2;\n    if (!isNaN(answer)) {\n      if (answer === correctAnswer) {\n        setResultMessage(`Correct! ${number1} + ${number2} = ${correctAnswer}`);\n        setCorrectAnswers(prevCorrectAnswers => prevCorrectAnswers + 1);\n      } else {\n        setResultMessage('Oops! Try again.');\n      }\n    } else {\n      setResultMessage('Please enter a valid number.');\n    }\n  };\n  const handleNextQuestion = () => {\n    setQuestionIndex(prevIndex => prevIndex + 1);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      if (resultMessage === '') {\n        // If result message is empty, check the answer\n        handleCheckAnswer();\n      } else {\n        // If result message is not empty, move to the next question\n        handleNextQuestion();\n      }\n    }\n  };\n  const handleEndGame = () => {\n    setGameOver(true);\n    setResultMessage(`Game Over! Your Final Score: ${correctAnswers}/${questionIndex - 1}`);\n  };\n  const handleReplay = () => {\n    setGameOver(false);\n    setQuestionIndex(1);\n    setCorrectAnswers(0);\n  };\n  const handleBack = () => {\n    // Implement the logic to go back if needed\n    // For now, let's just reload the page\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fill-in-blanks-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: resultMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReplay,\n          children: \"Replay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", questionIndex, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [number1, \" + \", number2, \" = ?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAnswer,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress,\n          placeholder: \"Your answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCheckAnswer,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-message\",\n          children: resultMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), resultMessage && questionIndex <= 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-question\",\n          onClick: handleNextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(FillInBlanksGame, \"l1ADhbGHjSrPkcJ0yOg+LCm/O5M=\");\n_c = FillInBlanksGame;\nexport default FillInBlanksGame;\nvar _c;\n$RefreshReg$(_c, \"FillInBlanksGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FillInBlanksGame","_s","number1","setNumber1","number2","setNumber2","userAnswer","setUserAnswer","resultMessage","setResultMessage","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","gameOver","setGameOver","generateRandomNumbers","handleEndGame","Math","floor","random","handleInputChange","event","enteredValue","target","value","replace","handleCheckAnswer","answer","parseInt","correctAnswer","isNaN","prevCorrectAnswers","handleNextQuestion","prevIndex","handleKeyPress","key","handleReplay","handleBack","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task3.js"],"sourcesContent":["// Task3.js\n\nimport React, { useState, useEffect } from 'react';\nimport './Task3.css';\n\nconst FillInBlanksGame = () => {\n  const [number1, setNumber1] = useState(0);\n  const [number2, setNumber2] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(1);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    if (questionIndex <= 5 && !gameOver) {\n      generateRandomNumbers();\n    } else {\n      handleEndGame();\n    }\n  }, [questionIndex, gameOver]);\n\n  const generateRandomNumbers = () => {\n    setNumber1(Math.floor(Math.random() * 10) + 1);\n    setNumber2(Math.floor(Math.random() * 10) + 1);\n    setUserAnswer('');\n    setResultMessage('');\n  };\n\n  const handleInputChange = (event) => {\n    // Allow only numbers in the input field\n    const enteredValue = event.target.value.replace(/[^0-9]/g, '');\n    setUserAnswer(enteredValue);\n  };\n\n  const handleCheckAnswer = () => {\n    const answer = parseInt(userAnswer, 10);\n    const correctAnswer = number1 + number2;\n\n    if (!isNaN(answer)) {\n      if (answer === correctAnswer) {\n        setResultMessage(`Correct! ${number1} + ${number2} = ${correctAnswer}`);\n        setCorrectAnswers((prevCorrectAnswers) => prevCorrectAnswers + 1);\n      } else {\n        setResultMessage('Oops! Try again.');\n      }\n    } else {\n      setResultMessage('Please enter a valid number.');\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setQuestionIndex((prevIndex) => prevIndex + 1);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      if (resultMessage === '') {\n        // If result message is empty, check the answer\n        handleCheckAnswer();\n      } else {\n        // If result message is not empty, move to the next question\n        handleNextQuestion();\n      }\n    }\n  };\n\n  const handleEndGame = () => {\n    setGameOver(true);\n    setResultMessage(`Game Over! Your Final Score: ${correctAnswers}/${questionIndex - 1}`);\n  };\n\n  const handleReplay = () => {\n    setGameOver(false);\n    setQuestionIndex(1);\n    setCorrectAnswers(0);\n  };\n\n  const handleBack = () => {\n    // Implement the logic to go back if needed\n    // For now, let's just reload the page\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"fill-in-blanks-container\">\n      <div className=\"question-container\">\n        {gameOver ? (\n          <div>\n            <p>{resultMessage}</p>\n            <button onClick={handleReplay}>Replay</button>\n            <button onClick={handleBack}>Back</button>\n          </div>\n        ) : (\n          <div>\n            <p>Question {questionIndex}:</p>\n            <p>{number1} + {number2} = ?</p>\n            <input\n              type=\"text\"\n              value={userAnswer}\n              onChange={handleInputChange}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Your answer\"\n            />\n            <button onClick={handleCheckAnswer}>Check Answer</button>\n            <div className=\"result-message\">{resultMessage}</div>\n            {resultMessage && questionIndex <= 5 && (\n              <button className=\"next-question\" onClick={handleNextQuestion}>\n                Next Question\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FillInBlanksGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}