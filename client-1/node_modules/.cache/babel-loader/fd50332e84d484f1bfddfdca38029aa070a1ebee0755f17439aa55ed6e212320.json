{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task2.js\",\n  _s = $RefreshSig$();\n// Task2.js\n\nimport React, { useState } from 'react';\nimport './Task2.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchTheColumnGame = () => {\n  _s();\n  const [columnA, setColumnA] = useState(['Apple', 'Banana', 'Cherry', 'Grapes']);\n  const [columnB, setColumnB] = useState(['Red', 'Yellow', 'Red', 'Purple']);\n  const [selectedCellA, setSelectedCellA] = useState(null);\n  const [selectedCellB, setSelectedCellB] = useState(null);\n  const handleCellClick = (index, column) => {\n    if (column === 'A') {\n      setSelectedCellA(index);\n    } else if (column === 'B') {\n      setSelectedCellB(index);\n    }\n  };\n  const checkMatch = () => {\n    if (selectedCellA !== null && selectedCellB !== null) {\n      const pairs = {\n        'Apple': 'Red',\n        'Banana': 'Yellow',\n        'Cherry': 'Red',\n        'Grapes': 'Purple'\n      };\n      return pairs[columnA[selectedCellA]] === columnB[selectedCellB];\n    }\n    return false;\n  };\n  const resetSelection = () => {\n    setSelectedCellA(null);\n    setSelectedCellB(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Match the Columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: columnA.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${selectedCellA === index ? 'selected' : ''}`,\n          onClick: () => handleCellClick(index, 'A'),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: columnB.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${selectedCellB === index ? 'selected' : ''}`,\n          onClick: () => handleCellClick(index, 'B'),\n          style: {\n            backgroundColor: checkMatch() ? '#8aff8a' : ''\n          },\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), checkMatch() ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Correct Match!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : selectedCellA !== null && selectedCellB !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Incorrect Match. Try Again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 61\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetSelection,\n      children: \"Reset Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchTheColumnGame, \"fp3vZVD2IgON+MtSDjrqgG8c7MA=\");\n_c = MatchTheColumnGame;\nexport default MatchTheColumnGame;\nvar _c;\n$RefreshReg$(_c, \"MatchTheColumnGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MatchTheColumnGame","_s","columnA","setColumnA","columnB","setColumnB","selectedCellA","setSelectedCellA","selectedCellB","setSelectedCellB","handleCellClick","index","column","checkMatch","pairs","resetSelection","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","value","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task2.js"],"sourcesContent":["// Task2.js\n\nimport React, { useState } from 'react';\nimport './Task2.css';\n\nconst MatchTheColumnGame = () => {\n  const [columnA, setColumnA] = useState(['Apple', 'Banana', 'Cherry', 'Grapes']);\n  const [columnB, setColumnB] = useState(['Red', 'Yellow', 'Red', 'Purple']);\n  const [selectedCellA, setSelectedCellA] = useState(null);\n  const [selectedCellB, setSelectedCellB] = useState(null);\n\n  const handleCellClick = (index, column) => {\n    if (column === 'A') {\n      setSelectedCellA(index);\n    } else if (column === 'B') {\n      setSelectedCellB(index);\n    }\n  };\n\n  const checkMatch = () => {\n    if (selectedCellA !== null && selectedCellB !== null) {\n      const pairs = {\n        'Apple': 'Red',\n        'Banana': 'Yellow',\n        'Cherry': 'Red',\n        'Grapes': 'Purple'\n      };\n\n      return pairs[columnA[selectedCellA]] === columnB[selectedCellB];\n    }\n    return false;\n  };\n\n  const resetSelection = () => {\n    setSelectedCellA(null);\n    setSelectedCellB(null);\n  };\n\n  return (\n    <div>\n      <h2>Match the Columns</h2>\n      <div className=\"grid\">\n        <div className=\"column\">\n          {columnA.map((value, index) => (\n            <div\n              key={index}\n              className={`cell ${selectedCellA === index ? 'selected' : ''}`}\n              onClick={() => handleCellClick(index, 'A')}\n            >\n              {value}\n            </div>\n          ))}\n        </div>\n        <div className=\"column\">\n          {columnB.map((value, index) => (\n            <div\n              key={index}\n              className={`cell ${selectedCellB === index ? 'selected' : ''}`}\n              onClick={() => handleCellClick(index, 'B')}\n              style={{ backgroundColor: checkMatch() ? '#8aff8a' : '' }}\n            >\n              {value}\n            </div>\n          ))}\n        </div>\n      </div>\n      {checkMatch() ? (\n        <p>Correct Match!</p>\n      ) : (\n        selectedCellA !== null && selectedCellB !== null && <p>Incorrect Match. Try Again!</p>\n      )}\n      <button onClick={resetSelection}>Reset Selection</button>\n    </div>\n  );\n};\n\nexport default MatchTheColumnGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}