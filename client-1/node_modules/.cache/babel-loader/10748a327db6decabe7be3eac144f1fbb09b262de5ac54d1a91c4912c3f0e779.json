{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SmallestNumberGame = () => {\n  _s();\n  // Generate an array of random numbers\n  const numbers = Array.from({\n    length: 5\n  }, () => Math.floor(Math.random() * 100) + 1);\n  const [result, setResult] = useState('');\n\n  // Function to check if the selected number is the smallest\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every((number, index) => index === selectedIndex || selectedNumber <= number);\n    if (isSmallest) {\n      setResult(`Correct! ${selectedNumber} is the smallest number.`);\n    } else {\n      setResult(`Try again! ${selectedNumber} is not the smallest number.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select the Smallest Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        marginTop: '20px'\n      },\n      children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => checkSmallestNumber(number, index),\n        children: number\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SmallestNumberGame, \"+gLbWhCz1wxZi8Q3iizH9D49vKk=\");\n_c = SmallestNumberGame;\nexport default SmallestNumberGame;\nvar _c;\n$RefreshReg$(_c, \"SmallestNumberGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SmallestNumberGame","_s","numbers","Array","from","length","Math","floor","random","result","setResult","checkSmallestNumber","selectedNumber","selectedIndex","isSmallest","every","number","index","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","marginTop","map","onClick","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SmallestNumberGame = () => {\n  // Generate an array of random numbers\n  const numbers = Array.from({ length: 5 }, () => Math.floor(Math.random() * 100) + 1);\n\n  const [result, setResult] = useState('');\n\n  // Function to check if the selected number is the smallest\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every(\n      (number, index) => index === selectedIndex || selectedNumber <= number\n    );\n\n    if (isSmallest) {\n      setResult(`Correct! ${selectedNumber} is the smallest number.`);\n    } else {\n      setResult(`Try again! ${selectedNumber} is not the smallest number.`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Select the Smallest Number</h1>\n      <div style={{ display: 'flex', justifyContent: 'space-around', marginTop: '20px' }}>\n        {numbers.map((number, index) => (\n          <button key={index} onClick={() => checkSmallestNumber(number, index)}>\n            {number}\n          </button>\n        ))}\n      </div>\n      <p>{result}</p>\n    </div>\n  );\n};\n\nexport default SmallestNumberGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,MAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;EAEpF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMc,mBAAmB,GAAGA,CAACC,cAAc,EAAEC,aAAa,KAAK;IAC7D,MAAMC,UAAU,GAAGZ,OAAO,CAACa,KAAK,CAC9B,CAACC,MAAM,EAAEC,KAAK,KAAKA,KAAK,KAAKJ,aAAa,IAAID,cAAc,IAAII,MAClE,CAAC;IAED,IAAIF,UAAU,EAAE;MACdJ,SAAS,CAAE,YAAWE,cAAe,0BAAyB,CAAC;IACjE,CAAC,MAAM;MACLF,SAAS,CAAE,cAAaE,cAAe,8BAA6B,CAAC;IACvE;EACF,CAAC;EAED,oBACEb,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCvB,OAAA;MAAKwB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,cAAc;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,EAChFhB,OAAO,CAACyB,GAAG,CAAC,CAACX,MAAM,EAAEC,KAAK,kBACzBlB,OAAA;QAAoB6B,OAAO,EAAEA,CAAA,KAAMjB,mBAAmB,CAACK,MAAM,EAAEC,KAAK,CAAE;QAAAC,QAAA,EACnEF;MAAM,GADIC,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MAAAmB,QAAA,EAAIT;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCID,kBAAkB;AAAA6B,EAAA,GAAlB7B,kBAAkB;AAkCxB,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}