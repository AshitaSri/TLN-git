{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task3.js\",\n  _s = $RefreshSig$();\n// FillInBlanksGame.js\n\nimport React, { useState } from 'react';\nimport './Task3.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FillInBlanksGame = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    num1: 10,\n    num2: 5,\n    answer: 15\n  }, {\n    num1: 8,\n    num2: 3,\n    answer: 11\n  }, {\n    num1: 15,\n    num2: 7,\n    answer: 22\n  }, {\n    num1: 6,\n    num2: 4,\n    answer: 10\n  }, {\n    num1: 12,\n    num2: 9,\n    answer: 21\n  }]);\n  const [currentSet, setCurrentSet] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n  const handleInputChange = e => {\n    const input = e.target.value;\n    // Basic check to ensure only numbers are allowed\n    if (/^\\d*$/.test(input)) {\n      setUserAnswer(input);\n    }\n  };\n  const checkAnswer = () => {\n    const userNum = parseInt(userAnswer, 10);\n    const correctAnswer = questions[currentSet].answer;\n    if (!isNaN(userNum) && userNum === correctAnswer) {\n      setResultMessage('Correct! Well done!');\n    } else {\n      setResultMessage('Oops! Try again.');\n    }\n  };\n  const nextQuestion = () => {\n    setUserAnswer('');\n    setResultMessage('');\n    if (currentSet < questions.length - 1) {\n      setCurrentSet(prevSet => prevSet + 1);\n    } else {\n      // Game over\n      setResultMessage('Game Over! You completed all sets.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fill-in-blanks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill in the Blanks - Addition Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), resultMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-message\",\n      children: resultMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), !resultMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [questions[currentSet].num1, \" + \", questions[currentSet].num2, \" =\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAnswer,\n          onChange: handleInputChange,\n          placeholder: \"Your answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAnswer,\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), resultMessage && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-question\",\n      onClick: nextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FillInBlanksGame, \"G922mFxAHS8KqC2TMpzyA5UQ00E=\");\n_c = FillInBlanksGame;\nexport default FillInBlanksGame;\nvar _c;\n$RefreshReg$(_c, \"FillInBlanksGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FillInBlanksGame","_s","questions","setQuestions","num1","num2","answer","currentSet","setCurrentSet","userAnswer","setUserAnswer","resultMessage","setResultMessage","handleInputChange","e","input","target","value","test","checkAnswer","userNum","parseInt","correctAnswer","isNaN","nextQuestion","length","prevSet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task3.js"],"sourcesContent":["// FillInBlanksGame.js\n\nimport React, { useState } from 'react';\nimport './Task3.css';\n\nconst FillInBlanksGame = () => {\n  const [questions, setQuestions] = useState([\n    { num1: 10, num2: 5, answer: 15 },\n    { num1: 8, num2: 3, answer: 11 },\n    { num1: 15, num2: 7, answer: 22 },\n    { num1: 6, num2: 4, answer: 10 },\n    { num1: 12, num2: 9, answer: 21 },\n  ]);\n\n  const [currentSet, setCurrentSet] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    const input = e.target.value;\n    // Basic check to ensure only numbers are allowed\n    if (/^\\d*$/.test(input)) {\n      setUserAnswer(input);\n    }\n  };\n\n  const checkAnswer = () => {\n    const userNum = parseInt(userAnswer, 10);\n    const correctAnswer = questions[currentSet].answer;\n\n    if (!isNaN(userNum) && userNum === correctAnswer) {\n      setResultMessage('Correct! Well done!');\n    } else {\n      setResultMessage('Oops! Try again.');\n    }\n  };\n\n  const nextQuestion = () => {\n    setUserAnswer('');\n    setResultMessage('');\n    if (currentSet < questions.length - 1) {\n      setCurrentSet((prevSet) => prevSet + 1);\n    } else {\n      // Game over\n      setResultMessage('Game Over! You completed all sets.');\n    }\n  };\n\n  return (\n    <div className=\"fill-in-blanks-container\">\n      <h2>Fill in the Blanks - Addition Game</h2>\n      {resultMessage && <p className=\"result-message\">{resultMessage}</p>}\n      {!resultMessage && (\n        <div className=\"question-container\">\n          <p>\n            {questions[currentSet].num1} + {questions[currentSet].num2} =\n            <input\n              type=\"text\"\n              value={userAnswer}\n              onChange={handleInputChange}\n              placeholder=\"Your answer\"\n            />\n            <button onClick={checkAnswer}>Check</button>\n          </p>\n        </div>\n      )}\n      {resultMessage && (\n        <button className=\"next-question\" onClick={nextQuestion}>\n          Next Question\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default FillInBlanksGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}