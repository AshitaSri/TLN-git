{"ast":null,"code":"var _jsxFileName = \"/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Task1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SmallestNumberGame = () => {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionsCompleted, setQuestionsCompleted] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const navigate = useNavigate(); // Get the navigate function here\n\n  useEffect(() => {\n    if (gameStarted) {\n      startNewSet();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameStarted]);\n  const startNewSet = () => {\n    if (questionIndex === 5) {\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      const newNumbers = Array.from({\n        length: 5\n      }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setShowResult(false);\n      setStartTime(new Date());\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = (seconds % 60).toFixed(2);\n    return `${minutes} min ${remainingSeconds} seconds`;\n  };\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every((number, index) => index === selectedIndex || selectedNumber <= number);\n    if (isSmallest) {\n      setResult('YES! You are right!');\n      setCorrectAnswers(prevCorrectAnswers => prevCorrectAnswers + 1);\n      setCompletedQuestions(prevCompletedQuestions => prevCompletedQuestions + 1);\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      setQuestionIndex(prevIndex => prevIndex + 1);\n    }, 1000);\n  };\n  const calculateScore = () => {\n    if (endTime) {\n      const accuracy = correctAnswers / 5 * 100;\n      setResult(`Game Over! Your score: ${correctAnswers}/5\\nAccuracy: ${accuracy.toFixed(0)}%`);\n    }\n  };\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setCorrectAnswers(0);\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n    setShowResult(prev => !prev);\n  };\n  const goBack = async () => {\n    try {\n      const token = window.localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:5000/saveCompletedQuestions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          task: \"Task1\",\n          completed: questionsCompleted\n        })\n      });\n      const data = await response.json();\n      console.log(data); // Log the response from the server\n\n      navigate('/dashboard', {\n        state: {\n          questionsCompleted\n        }\n      });\n    } catch (error) {\n      console.error('Error saving completed questions:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [!gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Smallest Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test your skills by identifying the smallest number in each set of numbers. Click on the number you believe is the smallest. Can you get them all right?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), gameStarted && questionIndex <= 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select the smallest number !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-buttons\",\n        children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => checkSmallestNumber(number, index),\n          children: number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: showResult && result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), questionIndex === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), endTime && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total time: \", formatTime((endTime - startTime) / 1000)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", correctAnswers, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Accuracy: \", correctAnswers / 5 * 100, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), !gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: restartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(SmallestNumberGame, \"zbbkcS5W4ft5nCN9xdV47Fka/EY=\", false, function () {\n  return [useNavigate];\n});\n_c = SmallestNumberGame;\nexport default SmallestNumberGame;\nvar _c;\n$RefreshReg$(_c, \"SmallestNumberGame\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SmallestNumberGame","_s","numbers","setNumbers","result","setResult","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","questionsCompleted","setQuestionsCompleted","startTime","setStartTime","endTime","setEndTime","gameStarted","setGameStarted","showResult","setShowResult","navigate","startNewSet","Date","calculateScore","newNumbers","Array","from","length","Math","floor","random","formatTime","seconds","minutes","remainingSeconds","toFixed","checkSmallestNumber","selectedNumber","selectedIndex","isSmallest","every","number","index","prevCorrectAnswers","setCompletedQuestions","prevCompletedQuestions","setTimeout","prevIndex","accuracy","restartGame","prev","goBack","token","window","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","task","completed","data","json","console","log","state","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/ashitasrivastava/Desktop/Telangana Hackathon/client/src/components/Task1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Task1.css';\n\nconst SmallestNumberGame = () => {\n  const [numbers, setNumbers] = useState([]);\n  const [result, setResult] = useState('');\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionsCompleted, setQuestionsCompleted] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const navigate = useNavigate(); // Get the navigate function here\n\n  useEffect(() => {\n    if (gameStarted) {\n      startNewSet();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionIndex, gameStarted]);\n\n  const startNewSet = () => {\n    if (questionIndex === 5) {\n      setEndTime(new Date());\n      calculateScore();\n    } else {\n      const newNumbers = Array.from({ length: 5 }, () => Math.floor(Math.random() * 100) + 1);\n      setNumbers(newNumbers);\n      setResult('');\n      setShowResult(false);\n      setStartTime(new Date());\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = (seconds % 60).toFixed(2);\n    return `${minutes} min ${remainingSeconds} seconds`;\n  };\n\n  const checkSmallestNumber = (selectedNumber, selectedIndex) => {\n    const isSmallest = numbers.every(\n      (number, index) => index === selectedIndex || selectedNumber <= number\n    );\n\n    if (isSmallest) {\n      setResult('YES! You are right!');\n      setCorrectAnswers((prevCorrectAnswers) => prevCorrectAnswers + 1);\n      setCompletedQuestions((prevCompletedQuestions) => prevCompletedQuestions + 1);\n    } else {\n      setResult('OOPS! You are wrong.');\n    }\n\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      setQuestionIndex((prevIndex) => prevIndex + 1);\n    }, 1000);\n  };\n\n  const calculateScore = () => {\n    if (endTime) {\n      const accuracy = (correctAnswers / 5) * 100;\n      setResult(`Game Over! Your score: ${correctAnswers}/5\\nAccuracy: ${accuracy.toFixed(0)}%`);\n    }\n  };\n\n  const restartGame = () => {\n    setQuestionIndex(0);\n    setResult('');\n    setCorrectAnswers(0);\n    setStartTime(new Date());\n    setEndTime(null);\n    setGameStarted(true);\n    setShowResult((prev) => !prev);\n  };\n\n  const goBack = async () => {\n    try {\n      const token = window.localStorage.getItem(\"token\");\n  \n      const response = await fetch(\"http://localhost:5000/saveCompletedQuestions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          task: \"Task1\",\n          completed: questionsCompleted,\n        }),\n      });\n  \n      const data = await response.json();\n      console.log(data); // Log the response from the server\n  \n      navigate('/dashboard', { state: { questionsCompleted } });\n    } catch (error) {\n      console.error('Error saving completed questions:', error);\n    }\n  };\n  \n\n  return (\n    <div className=\"game-container\">\n      {!gameStarted && (\n        <div className=\"game-description\">\n          <h1>Select the Smallest Number</h1>\n          <p>\n            Test your skills by identifying the smallest number in each set of numbers. Click on\n            the number you believe is the smallest. Can you get them all right?\n          </p>\n        </div>\n      )}\n\n      {gameStarted && questionIndex <= 4 && (\n        <div>\n          <p>Select the smallest number !</p>\n          <div className=\"number-buttons\">\n            {numbers.map((number, index) => (\n              <button key={index} onClick={() => checkSmallestNumber(number, index)}>\n                {number}\n              </button>\n            ))}\n          </div>\n          <p>{showResult && result}</p>\n        </div>\n      )}\n\n      {questionIndex === 5 && (\n        <div>\n          <p>Game Over!</p>\n          {endTime && (\n            <div>\n              <p>Total time: {formatTime((endTime - startTime) / 1000)}</p>\n              <p>Your score: {correctAnswers}/5</p>\n              <p>Accuracy: {(correctAnswers / 5) * 100}%</p>\n            </div>\n          )}\n          <button onClick={restartGame}>Restart Game</button>\n          <button onClick={goBack}>Go Back</button>\n        </div>\n      )}\n\n      {!gameStarted && (\n        <div className=\"start-button-container\">\n          <button className=\"start-button\" onClick={restartGame}>\n            Start Game\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SmallestNumberGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}